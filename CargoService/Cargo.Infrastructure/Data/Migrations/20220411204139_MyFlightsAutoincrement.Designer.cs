// <auto-generated />
using System;
using Cargo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cargo.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CargoContext))]
    [Migration("20220411204139_MyFlightsAutoincrement")]
    partial class MyFlightsAutoincrement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Agent", b =>
                {
                    b.Property<int>("ContragentId")
                        .HasColumnType("int");

                    b.Property<string>("IataCargoAgentCassAddress")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("IataCargoAgentCassAddress");

                    b.Property<string>("IataCargoAgentNumericCode")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("IataCargoAgentNumericCode");

                    b.Property<string>("ParticipantIdentifier")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ParticipantIdentifier");

                    b.HasKey("ContragentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.AircraftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BaseType")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("BaseType");

                    b.Property<string>("IataCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Iata");

                    b.Property<string>("IcaoCode")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Icao");

                    b.Property<string>("InternationalName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("InternationalName");

                    b.Property<bool?>("IsCargo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsCargo");

                    b.Property<int>("MaxGrossCapacity")
                        .HasColumnType("int")
                        .HasColumnName("MaxGrossCapacity");

                    b.Property<int>("MaxGrossPayload")
                        .HasColumnType("int")
                        .HasColumnName("MaxGrossPayload");

                    b.Property<int>("MaxTakeOffWeight")
                        .HasColumnType("int")
                        .HasColumnName("MaxTakeOffWeight");

                    b.Property<int>("Oew")
                        .HasColumnType("int")
                        .HasColumnName("Oew");

                    b.Property<string>("RussianName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RussianName");

                    b.HasKey("Id");

                    b.ToTable("AircraftTypes");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Airline", b =>
                {
                    b.Property<int>("ContragentId")
                        .HasColumnType("int");

                    b.Property<string>("IataCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Iata");

                    b.Property<string>("IcaoCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Icao");

                    b.Property<string>("PrefixAwb")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("PrefixAwb");

                    b.HasKey("ContragentId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Awb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AcPrefix")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("AcPrefix");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Destination");

                    b.Property<string>("ManifestDescriptionOfGoods")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ManifestDescriptionOfGoods");

                    b.Property<int>("NumberOfPieces")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfPieces");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Origin");

                    b.Property<string>("QuanDetShipmentDescriptionCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("QuanDetShipmentDescriptionCode");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("SerialNumber");

                    b.Property<string>("SpecialHandlingRequirements")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("SpecialHandlingRequirements");

                    b.Property<string>("SpecialServiceRequest")
                        .HasMaxLength(65)
                        .HasColumnType("varchar(65)")
                        .HasColumnName("SpecialServiceRequest");

                    b.Property<decimal>("VolumeAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("VolumeAmount");

                    b.Property<string>("VolumeCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("VolumeCode");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Weight");

                    b.Property<string>("WeightCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("WeightCode");

                    b.HasKey("Id");

                    b.ToTable("Awbs");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.AwbNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreateDate");

                    b.Property<int>("PoolId")
                        .HasColumnType("int");

                    b.Property<int>("SerialNumber")
                        .HasMaxLength(7)
                        .HasColumnType("int")
                        .HasColumnName("SerialNumber");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("PoolId");

                    b.ToTable("AwbNumber");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AwbId")
                        .HasColumnType("int")
                        .HasColumnName("AwbId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreatedDate");

                    b.Property<int>("FlightId")
                        .HasColumnType("int")
                        .HasColumnName("FlightId");

                    b.Property<string>("ForwardingAgent")
                        .HasMaxLength(17)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("ForwardingAgent");

                    b.Property<int?>("ForwardingAgentId")
                        .HasColumnType("int")
                        .HasColumnName("ForwardingAgentId");

                    b.Property<string>("SpaceAllocationCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("SpaceAllocationCode");

                    b.Property<string>("Unloading")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Unloading");

                    b.HasKey("Id");

                    b.HasIndex("AwbId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.CommPayloadRule4AicraftType", b =>
                {
                    b.Property<int>("CommPayloadRuleId")
                        .HasColumnType("int");

                    b.Property<int>("AircraftTypeId")
                        .HasColumnType("int");

                    b.HasKey("CommPayloadRuleId");

                    b.HasIndex("AircraftTypeId")
                        .IsUnique();

                    b.ToTable("CommPayloadRules4AicraftType");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.CommPayloadRule4Carrier", b =>
                {
                    b.Property<int>("CommPayloadRuleId")
                        .HasColumnType("int");

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.HasKey("CommPayloadRuleId");

                    b.HasIndex("CarrierId")
                        .IsUnique();

                    b.ToTable("CommPayloadRules4Carrier");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.CommPayloadRule4Route", b =>
                {
                    b.Property<int>("CommPayloadRuleId")
                        .HasColumnType("int");

                    b.Property<int>("DestinationLocationId")
                        .HasColumnType("int");

                    b.Property<int>("OriginLocationId")
                        .HasColumnType("int");

                    b.HasKey("CommPayloadRuleId");

                    b.HasIndex("DestinationLocationId")
                        .IsUnique();

                    b.HasIndex("OriginLocationId")
                        .IsUnique();

                    b.ToTable("CommPayloadRules4Route");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.CommercialPayload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("CommercialPayloads");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.ContactDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContactIdentifier")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ContactIdentifier");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("ContactNumber");

                    b.Property<int>("ContragentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContragentId");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Contragent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("AccountNumber");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryId");

                    b.Property<string>("DomesticName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DomesticName");

                    b.Property<string>("Inn")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("Inn");

                    b.Property<string>("InternationalName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("InternationalName");

                    b.Property<string>("Kpp")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Kpp");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Login");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Pass");

                    b.Property<string>("Place")
                        .HasMaxLength(17)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("Place");

                    b.Property<string>("PlaceRus")
                        .HasMaxLength(17)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("PlaceRus");

                    b.Property<string>("PostCode")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("PostCode");

                    b.Property<string>("RussianName")
                        .HasMaxLength(230)
                        .HasColumnType("varchar(230)")
                        .HasColumnName("RussianName");

                    b.Property<string>("StateProvince")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("StateProvince");

                    b.Property<string>("StateProvinceRus")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("StateProvinceRus");

                    b.Property<string>("StreetAddressName")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("StreetAddressName");

                    b.Property<string>("StreetAddressNameRus")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("StreetAddressNameRus");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Contragents");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alpha2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Alpha2");

                    b.Property<string>("Alpha3")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Alpha3");

                    b.Property<string>("EnglishShortName")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("varchar(130)")
                        .HasColumnName("EnglishShortName");

                    b.Property<string>("Numeric3")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("RussianName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RussianName");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.IataLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("CityName");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Code");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("MetropolitanAreaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Name");

                    b.Property<string>("RussianName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RussianName");

                    b.Property<TimeSpan>("TimeZone")
                        .HasColumnType("time(6)")
                        .HasColumnName("TimeZone");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("MetropolitanAreaId");

                    b.ToTable("IataLocations");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.MyFlight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Agreement")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Agreement");

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Airline");

                    b.Property<DateTime>("DateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateAt");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateTo");

                    b.HasKey("Id");

                    b.ToTable("MyFlights");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.MyFlightNumbers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BeginNum")
                        .HasColumnType("int")
                        .HasColumnName("BeginNum");

                    b.Property<int?>("EndNum")
                        .HasColumnType("int")
                        .HasColumnName("EndNum");

                    b.Property<int>("MyFlightsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MyFlightsId");

                    b.ToTable("MyFlightNumbers");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.MyFlightRoutes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("longtext")
                        .HasColumnName("Destination");

                    b.Property<int>("MyFlightsId")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext")
                        .HasColumnName("Origin");

                    b.HasKey("Id");

                    b.HasIndex("MyFlightsId");

                    b.ToTable("MyFlightRoutes");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.PayloadNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionToParent")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("CommPayloadId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommPayloadId");

                    b.HasIndex("ParentId");

                    b.ToTable("PayloadNodes");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Pool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CarrierId")
                        .HasColumnType("int")
                        .HasColumnName("CarrierId");

                    b.Property<DateTime?>("DateClose")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateClose");

                    b.Property<DateTime>("DateOpen")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateOpen");

                    b.Property<int>("PoolLenght")
                        .HasColumnType("int")
                        .HasColumnName("PoolLenght");

                    b.Property<int>("SaleAgentId")
                        .HasColumnType("int")
                        .HasColumnName("SaleAgentId");

                    b.Property<int>("StartNumber")
                        .HasColumnType("int")
                        .HasColumnName("StartNumber");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Pool");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Shr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ShrCode");

                    b.Property<string>("ForbShrGroupIata")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ForbShrGroupIata");

                    b.Property<string>("InternationalDescr")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NameEn");

                    b.Property<string>("RecomendedShr")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RecShr");

                    b.Property<string>("RussianDescr")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NameRu");

                    b.Property<string>("ShrGroup")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ShrGroup");

                    b.HasKey("Id");

                    b.ToTable("Shrs");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Agent", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Contragent", "Contragent")
                        .WithOne("SalesAgent")
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.Agent", "ContragentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contragent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Airline", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Contragent", "Contragent")
                        .WithOne("Carrier")
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.Airline", "ContragentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contragent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.AwbNumber", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Pool", "Pool")
                        .WithMany("UsedAwbNumbers")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pool");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Booking", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Awb", "Awb")
                        .WithMany("Bookings")
                        .HasForeignKey("AwbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Awb");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.CommPayloadRule4AicraftType", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.AircraftType", "AircraftType")
                        .WithOne()
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.CommPayloadRule4AicraftType", "AircraftTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.CommercialPayload", "CommercialPayload")
                        .WithOne()
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.CommPayloadRule4AicraftType", "CommPayloadRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AircraftType");

                    b.Navigation("CommercialPayload");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.CommPayloadRule4Carrier", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Airline", "Carrier")
                        .WithOne()
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.CommPayloadRule4Carrier", "CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.CommercialPayload", "CommercialPayload")
                        .WithOne()
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.CommPayloadRule4Carrier", "CommPayloadRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");

                    b.Navigation("CommercialPayload");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.CommPayloadRule4Route", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.CommercialPayload", "CommercialPayload")
                        .WithOne()
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.CommPayloadRule4Route", "CommPayloadRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.IataLocation", "DestinationLocation")
                        .WithOne()
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.CommPayloadRule4Route", "DestinationLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.IataLocation", "OriginLocation")
                        .WithOne()
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.CommPayloadRule4Route", "OriginLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommercialPayload");

                    b.Navigation("DestinationLocation");

                    b.Navigation("OriginLocation");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.ContactDetail", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Contragent", "Contragent")
                        .WithMany("ContactDetails")
                        .HasForeignKey("ContragentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contragent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Contragent", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Country", "Country")
                        .WithMany("Contragents")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.IataLocation", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.IataLocation", "MetropolitanArea")
                        .WithMany("Airports")
                        .HasForeignKey("MetropolitanAreaId");

                    b.Navigation("Country");

                    b.Navigation("MetropolitanArea");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.MyFlightNumbers", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.MyFlight", "MyFlights")
                        .WithMany("MyFlightsNumbers")
                        .HasForeignKey("MyFlightsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyFlights");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.MyFlightRoutes", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.MyFlight", "MyFlights")
                        .WithMany("MyFlightsRoutes")
                        .HasForeignKey("MyFlightsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyFlights");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.PayloadNode", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.CommercialPayload", "CommercialPayload")
                        .WithMany()
                        .HasForeignKey("CommPayloadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.PayloadNode", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CommercialPayload");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Awb", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Contragent", b =>
                {
                    b.Navigation("Carrier");

                    b.Navigation("ContactDetails");

                    b.Navigation("SalesAgent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Country", b =>
                {
                    b.Navigation("Contragents");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.IataLocation", b =>
                {
                    b.Navigation("Airports");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.MyFlight", b =>
                {
                    b.Navigation("MyFlightsNumbers");

                    b.Navigation("MyFlightsRoutes");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.PayloadNode", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Pool", b =>
                {
                    b.Navigation("UsedAwbNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
