// <auto-generated />
using System;
using Cargo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cargo.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CargoContext))]
    [Migration("20220913133417_Carrier2CarrierId")]
    partial class Carrier2CarrierId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CarrierChargeBindingIataLocation", b =>
                {
                    b.Property<int>("AirportsId")
                        .HasColumnType("int");

                    b.Property<long>("CarrierChargeBindingsId")
                        .HasColumnType("bigint");

                    b.HasKey("AirportsId", "CarrierChargeBindingsId");

                    b.HasIndex("CarrierChargeBindingsId");

                    b.ToTable("CarrierChargeBindingAirport", (string)null);
                });

            modelBuilder.Entity("CarrierChargeShr", b =>
                {
                    b.Property<int>("IncludedShrCodesId")
                        .HasColumnType("int");

                    b.Property<long>("IncludingCarrierChargesId")
                        .HasColumnType("bigint");

                    b.HasKey("IncludedShrCodesId", "IncludingCarrierChargesId");

                    b.HasIndex("IncludingCarrierChargesId");

                    b.ToTable("CarrierChargeShrIncluded", (string)null);
                });

            modelBuilder.Entity("CarrierChargeShr1", b =>
                {
                    b.Property<int>("ExcludedShrCodesId")
                        .HasColumnType("int");

                    b.Property<long>("ExcludingCarrierChargesId")
                        .HasColumnType("bigint");

                    b.HasKey("ExcludedShrCodesId", "ExcludingCarrierChargesId");

                    b.HasIndex("ExcludingCarrierChargesId");

                    b.ToTable("CarrierChargeShrExcluded", (string)null);
                });

            modelBuilder.Entity("CarrierChargeTransportProduct", b =>
                {
                    b.Property<ulong>("IncludedProductsId")
                        .HasColumnType("bigint unsigned");

                    b.Property<long>("IncludingCarrierChargesId")
                        .HasColumnType("bigint");

                    b.HasKey("IncludedProductsId", "IncludingCarrierChargesId");

                    b.HasIndex("IncludingCarrierChargesId");

                    b.ToTable("CarrierChargeProductIncluded", (string)null);
                });

            modelBuilder.Entity("CarrierChargeTransportProduct1", b =>
                {
                    b.Property<ulong>("ExcludedProductsId")
                        .HasColumnType("bigint unsigned");

                    b.Property<long>("ExcludingCarrierChargesId")
                        .HasColumnType("bigint");

                    b.HasKey("ExcludedProductsId", "ExcludingCarrierChargesId");

                    b.HasIndex("ExcludingCarrierChargesId");

                    b.ToTable("CarrierChargeProductExcluded", (string)null);
                });

            modelBuilder.Entity("IataLocationTariffGroup", b =>
                {
                    b.Property<int>("AirportsId")
                        .HasColumnType("int");

                    b.Property<int>("TariffGroupsId")
                        .HasColumnType("int");

                    b.HasKey("AirportsId", "TariffGroupsId");

                    b.HasIndex("TariffGroupsId");

                    b.ToTable("TariffGroupAirport", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CarrierId")
                        .HasColumnType("int")
                        .HasColumnName("CarrierId");

                    b.Property<int>("ContragentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Email");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Fax");

                    b.Property<string>("IataCargoAgentCassAddress")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("IataCargoAgentCassAddress");

                    b.Property<string>("IataCargoAgentNumericCode")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("IataCargoAgentNumericCode");

                    b.Property<string>("ImpCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImpCode");

                    b.Property<string>("KosudCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KosudCode");

                    b.Property<string>("ParticipantIdentifier")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ParticipantIdentifier");

                    b.Property<string>("Phone")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Phone");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ContragentId");

                    b.ToTable("Agents", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.AircraftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BaseType")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("BaseType");

                    b.Property<string>("IataCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Iata");

                    b.Property<string>("IcaoCode")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Icao");

                    b.Property<string>("InternationalName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("InternationalName");

                    b.Property<bool?>("IsCargo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsCargo");

                    b.Property<int>("MaxGrossCapacity")
                        .HasColumnType("int")
                        .HasColumnName("MaxGrossCapacity");

                    b.Property<int>("MaxGrossPayload")
                        .HasColumnType("int")
                        .HasColumnName("MaxGrossPayload");

                    b.Property<int>("MaxTakeOffWeight")
                        .HasColumnType("int")
                        .HasColumnName("MaxTakeOffWeight");

                    b.Property<int>("Oew")
                        .HasColumnType("int")
                        .HasColumnName("Oew");

                    b.Property<string>("RussianName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RussianName");

                    b.HasKey("Id");

                    b.ToTable("AircraftTypes", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Airline", b =>
                {
                    b.Property<int>("ContragentId")
                        .HasColumnType("int");

                    b.Property<string>("IataCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Iata");

                    b.Property<string>("IcaoCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Icao");

                    b.Property<string>("PrefixAwb")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("PrefixAwb");

                    b.HasKey("ContragentId");

                    b.ToTable("Airlines", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Awb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AcPrefix")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("AcPrefix");

                    b.Property<string>("AddOn")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("AddOn");

                    b.Property<int>("AgentId")
                        .HasColumnType("int")
                        .HasColumnName("AgentId");

                    b.Property<bool>("AllIn")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("AllIn");

                    b.Property<decimal>("BaseTariffRate")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("BaseTariffRate");

                    b.Property<decimal>("ChargeWeight")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("ChargeWeight");

                    b.Property<ulong?>("CollectId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("CollectId");

                    b.Property<ulong?>("ConsigneeId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("ConsigneeId");

                    b.Property<ulong?>("ConsignorId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("ConsignorId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Currency");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Destination");

                    b.Property<string>("ManifestDescriptionOfGoods")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ManifestDescriptionOfGoods");

                    b.Property<string>("ManifestDescriptionOfGoodsRu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ManifestDescriptionOfGoodsRu");

                    b.Property<string>("NCV")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Ncv");

                    b.Property<string>("NDV")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Ndv");

                    b.Property<int>("NumberOfPieces")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfPieces");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Origin");

                    b.Property<string>("PaymentProcedure")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("PaymentProcedure");

                    b.Property<string>("PlaceOfIssue")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PlaceOfIssue");

                    b.Property<ulong?>("PoolAwbNumId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("PoolAwbNumId");

                    b.Property<ulong?>("PrepaidId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("PrepaidId");

                    b.Property<string>("Product")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Product");

                    b.Property<string>("QuanDetShipmentDescriptionCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("QuanDetShipmentDescriptionCode");

                    b.Property<string>("SalesChannel")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("SalesChannel");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("SerialNumber");

                    b.Property<string>("SpecialHandlingRequirements")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("SpecialHandlingRequirements");

                    b.Property<string>("SpecialServiceRequest")
                        .HasMaxLength(65)
                        .HasColumnType("varchar(65)")
                        .HasColumnName("SpecialServiceRequest");

                    b.Property<string>("SpecialServiceRequestRu")
                        .HasMaxLength(65)
                        .HasColumnType("varchar(65)")
                        .HasColumnName("SpecialServiceRequestRu");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Status");

                    b.Property<string>("TariffClass")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("TariffClass");

                    b.Property<decimal>("TariffRate")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("TariffRate");

                    b.Property<string>("TariffsSolutionCode")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("TariffsSolutionCode");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Total");

                    b.Property<decimal>("VolumeAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("VolumeAmount");

                    b.Property<string>("VolumeCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("VolumeCode");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Weight");

                    b.Property<string>("WeightCharge")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("WeightCharge");

                    b.Property<string>("WeightCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("WeightCode");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("CollectId");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("ConsignorId");

                    b.HasIndex("PoolAwbNumId")
                        .IsUnique();

                    b.HasIndex("PrepaidId");

                    b.ToTable("Awbs", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.AwbContragent", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("AddressEn")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("AddressEn");

                    b.Property<string>("AddressRu")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("AddressRu");

                    b.Property<string>("AgentCass")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("AgentCass");

                    b.Property<string>("CityEn")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CityEn");

                    b.Property<string>("CityRu")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CityRu");

                    b.Property<string>("CodeEn")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("CodeEn");

                    b.Property<string>("CountryISO")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("CountryISO");

                    b.Property<string>("Email")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Email");

                    b.Property<string>("Fax")
                        .HasMaxLength(17)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("Fax");

                    b.Property<string>("IataCode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("IataCode");

                    b.Property<string>("NameEn")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NameEn");

                    b.Property<string>("NameExEn")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameExEn");

                    b.Property<string>("NameExRu")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameExRu");

                    b.Property<string>("NameRu")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NameRu");

                    b.Property<string>("Passport")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Passport");

                    b.Property<string>("Phone")
                        .HasMaxLength(17)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("Phone");

                    b.Property<string>("PreviewEn")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("PreviewEn");

                    b.Property<string>("PreviewRu")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("PreviewRu");

                    b.Property<string>("RegionEn")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("RegionEn");

                    b.Property<string>("RegionRu")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("RegionRu");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("AwbContragents", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AwbId")
                        .HasColumnType("int")
                        .HasColumnName("AwbId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreatedDate");

                    b.Property<ulong>("FlightScheduleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("NumberOfPieces")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfPieces");

                    b.Property<int?>("PrevRoutingId")
                        .HasColumnType("int");

                    b.Property<string>("QuanDetShipmentDescriptionCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("QuanDetShipmentDescriptionCode");

                    b.Property<string>("SpaceAllocationCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("SpaceAllocationCode");

                    b.Property<decimal>("VolumeAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("VolumeAmount");

                    b.Property<string>("VolumeCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("VolumeCode");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Weight");

                    b.Property<string>("WeightCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("WeightCode");

                    b.HasKey("Id");

                    b.HasIndex("AwbId");

                    b.HasIndex("FlightScheduleId");

                    b.HasIndex("PrevRoutingId");

                    b.ToTable("Bookings", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.BookingRcs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AwbId")
                        .HasColumnType("int")
                        .HasColumnName("AwbId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreatedDate");

                    b.Property<ulong>("FlightScheduleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("NumberOfPieces")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfPieces");

                    b.Property<string>("QuanDetShipmentDescriptionCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("QuanDetShipmentDescriptionCode");

                    b.Property<string>("SpaceAllocationCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("SpaceAllocationCode");

                    b.Property<decimal>("VolumeAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("VolumeAmount");

                    b.Property<string>("VolumeCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("VolumeCode");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Weight");

                    b.Property<string>("WeightCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("WeightCode");

                    b.HasKey("Id");

                    b.HasIndex("AwbId");

                    b.HasIndex("FlightScheduleId");

                    b.ToTable("BookingsArchive", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.ConsignmentStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AirportCode")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("AirportCode");

                    b.Property<int>("AwbId")
                        .HasColumnType("int")
                        .HasColumnName("AwbId");

                    b.Property<DateTime>("DateChange")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateChange");

                    b.Property<DateTime?>("FlightDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FlightNumber")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("FlightNumber");

                    b.Property<int>("NumberOfPiece")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfPiece");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Source");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("StatusCode");

                    b.Property<string>("TitleEn")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TitleEn");

                    b.Property<string>("TitleRu")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TitleRu");

                    b.Property<double?>("VolumeAmount")
                        .HasColumnType("double")
                        .HasColumnName("VolumeAmount");

                    b.Property<double?>("Weight")
                        .HasColumnType("double")
                        .HasColumnName("Weight");

                    b.HasKey("Id");

                    b.HasIndex("AwbId");

                    b.ToTable("ConsignmentStatuses", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.ContactDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContactIdentifier")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ContactIdentifier");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("ContactNumber");

                    b.Property<int>("ContragentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContragentId");

                    b.ToTable("ContactDetails", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.ContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("Email1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Email1");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Email2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("FullName");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone1");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone2");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Position");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("ContactInformations", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Contragent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("AccountNumber");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryId");

                    b.Property<string>("DomesticName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DomesticName");

                    b.Property<string>("Inn")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("Inn");

                    b.Property<string>("InternationalName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("InternationalName");

                    b.Property<bool>("IsPhysic")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsPhysic");

                    b.Property<string>("Kpp")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Kpp");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("Login");

                    b.Property<string>("NameEngAdditional")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NameEngAdditional");

                    b.Property<string>("NameRusAdditional")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NameRusAdditional");

                    b.Property<string>("OGRN")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OGRN");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Pass");

                    b.Property<string>("Place")
                        .HasMaxLength(17)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("Place");

                    b.Property<string>("PlaceRus")
                        .HasMaxLength(17)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("PlaceRus");

                    b.Property<string>("PostCode")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("PostCode");

                    b.Property<string>("RussianName")
                        .HasMaxLength(230)
                        .HasColumnType("varchar(230)")
                        .HasColumnName("RussianName");

                    b.Property<string>("StateCode")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("StateCode");

                    b.Property<string>("StateProvince")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("StateProvince");

                    b.Property<string>("StateProvinceRus")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("StateProvinceRus");

                    b.Property<string>("StreetAddressName")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("StreetAddressName");

                    b.Property<string>("StreetAddressNameRus")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("StreetAddressNameRus");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Contragents", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alpha2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Alpha2");

                    b.Property<string>("Alpha3")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Alpha3");

                    b.Property<string>("EnglishShortName")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("varchar(130)")
                        .HasColumnName("EnglishShortName");

                    b.Property<string>("Numeric3")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("RussianName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RussianName");

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.AirportContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Email1");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Email2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("FullName");

                    b.Property<int>("IataLocationId")
                        .HasColumnType("int");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone1");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone2");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Position");

                    b.HasKey("Id");

                    b.HasIndex("IataLocationId");

                    b.ToTable("AirportContactInformations", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlphabeticCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("AlphabeticCode");

                    b.Property<string>("DigitalCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DigitalCode");

                    b.Property<string>("NameEng")
                        .HasColumnType("longtext")
                        .HasColumnName("NameEng");

                    b.Property<string>("NameRus")
                        .HasColumnType("longtext")
                        .HasColumnName("NameRus");

                    b.HasKey("Id");

                    b.ToTable("Currencies", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("CityName");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Code");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("MetropolitanAreaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Name");

                    b.Property<string>("RussianName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RussianName");

                    b.Property<TimeSpan>("TimeZone")
                        .HasColumnType("time(6)")
                        .HasColumnName("TimeZone");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("MetropolitanAreaId");

                    b.ToTable("IataLocations", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.IataLocationExtInfo", b =>
                {
                    b.Property<int>("IataLocationId")
                        .HasColumnType("int");

                    b.Property<string>("CityRusName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CityRusName");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Remarks");

                    b.Property<TimeSpan>("TimeZoneSummer")
                        .HasColumnType("time(6)")
                        .HasColumnName("TimeZoneSummer");

                    b.Property<TimeSpan>("TimeZoneWinter")
                        .HasColumnType("time(6)")
                        .HasColumnName("TimeZoneWinter");

                    b.HasKey("IataLocationId");

                    b.ToTable("IataLocationExtInfos", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.SlaProhibition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Export")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Export");

                    b.Property<int>("IataLocationId")
                        .HasColumnType("int");

                    b.Property<bool>("Import")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Import");

                    b.Property<string>("MvlVvl")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("MvlVvl");

                    b.Property<string>("Shr")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("Shr");

                    b.Property<bool>("Transfer")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Transfer");

                    b.Property<bool>("Transit")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Transit");

                    b.Property<string>("Type")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("IataLocationId");

                    b.ToTable("SlaProhibitions", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.SlaTimeLimitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IataLocationId")
                        .HasColumnType("int");

                    b.Property<string>("MvlVvl")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("MvlVvl");

                    b.Property<string>("Shr")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("Shr");

                    b.Property<int>("Time")
                        .HasColumnType("int")
                        .HasColumnName("Time");

                    b.Property<string>("Type")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("IataLocationId");

                    b.ToTable("SlaTimeLimitations", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.TariffGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Code");

                    b.Property<string>("DescriptionEng")
                        .HasColumnType("longtext")
                        .HasColumnName("DescriptionEng");

                    b.Property<string>("DescriptionRus")
                        .HasColumnType("longtext")
                        .HasColumnName("DescriptionRus");

                    b.HasKey("Id");

                    b.ToTable("TariffGroups", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.TelexSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Emails")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Emails");

                    b.Property<int>("IataLocationId")
                        .HasColumnType("int");

                    b.Property<string>("OffsetBase")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OffsetBase");

                    b.Property<int?>("OffsetValue")
                        .HasColumnType("int")
                        .HasColumnName("OffsetValue");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("IataLocationId");

                    b.ToTable("TelexSettings", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Carrier")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Carrier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateCreated");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Direction");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("From");

                    b.Property<int?>("LinkedAwbId")
                        .HasColumnType("int")
                        .HasColumnName("LinkedAwbId");

                    b.Property<ulong?>("LinkedFlightId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("LinkedFlightId");

                    b.Property<Guid?>("LinkedNtId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LinkedNtId");

                    b.Property<string>("MessageIdentifier")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("MessageIdentifier");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("To");

                    b.Property<ushort>("VersionNumber")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("VersionNumber");

                    b.HasKey("Id");

                    b.HasIndex("LinkedAwbId");

                    b.HasIndex("LinkedFlightId");

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.OtherCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AwbId")
                        .HasColumnType("int");

                    b.Property<string>("CA")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CA");

                    b.Property<decimal>("Collect")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Collect");

                    b.Property<decimal>("Prepaid")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Prepaid");

                    b.Property<string>("TypeCharge")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TypeCharge");

                    b.HasKey("Id");

                    b.HasIndex("AwbId");

                    b.ToTable("OtherCharges", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.CarrierCharge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ApplicationType")
                        .HasColumnType("longtext")
                        .HasColumnName("ApplicationType");

                    b.Property<string>("Category")
                        .HasColumnType("longtext")
                        .HasColumnName("Category");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("Code");

                    b.Property<string>("DescriptionEng")
                        .HasColumnType("longtext")
                        .HasColumnName("DescriptionEng");

                    b.Property<string>("DescriptionRus")
                        .HasColumnType("longtext")
                        .HasColumnName("DescriptionRus");

                    b.Property<bool>("IsAllIn")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsAllIn");

                    b.Property<string>("Recepient")
                        .HasColumnType("longtext")
                        .HasColumnName("Recepient");

                    b.Property<string>("SalesChannels")
                        .HasColumnType("longtext")
                        .HasColumnName("SalesChannels");

                    b.HasKey("Id");

                    b.ToTable("CarrierCharges", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.CarrierChargeBinding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CarrierChargeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Parameter")
                        .HasColumnType("longtext")
                        .HasColumnName("Parameter");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("CarrierChargeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CarrierChargeBindings", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.IataCharge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Category")
                        .HasColumnType("longtext")
                        .HasColumnName("Category");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("Code");

                    b.Property<string>("DescriptionEng")
                        .HasColumnType("longtext")
                        .HasColumnName("DescriptionEng");

                    b.Property<string>("DescriptionRus")
                        .HasColumnType("longtext")
                        .HasColumnName("DescriptionRus");

                    b.HasKey("Id");

                    b.ToTable("IataCharges", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.RateGridHeader", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasComment("ID and primary key of a rate grid.");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("Rate grid's code/name. Must be an English(10) unique string.");

                    b.Property<DateTime>("Ver")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasComment("Row's timestamp.");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_RateGridHeaders1")
                        .IsUnique();

                    b.ToTable("RateGridHeaders");

                    b.HasComment("Contains all read grid headers.");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.RateGridRank", b =>
                {
                    b.Property<ulong>("GridId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("GrdId")
                        .HasComment("Reference to grid's header.");

                    b.Property<uint>("Rank")
                        .HasColumnType("int unsigned")
                        .HasComment("Grid's rank. Must be greater than or equal to zero.");

                    b.Property<DateTime>("Ver")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasComment("Row's timestamp.");

                    b.HasKey("GridId", "Rank")
                        .HasName("PK_RateGridRanks");

                    b.ToTable("RateGridRanks");

                    b.HasComment("Contains rank specifications of all rate grids.");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.RateGridRankValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<uint>("Rank")
                        .HasColumnType("int unsigned")
                        .HasColumnName("Rank");

                    b.Property<int?>("TariffSolutionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("TariffSolutionId");

                    b.ToTable("RateGridRankValues", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.TariffAddon", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("MinimumAddon")
                        .HasColumnType("int")
                        .HasColumnName("MinimumAddon");

                    b.Property<int?>("TariffSolutionId")
                        .HasColumnType("int");

                    b.Property<int>("WeightAddon")
                        .HasColumnType("int")
                        .HasColumnName("WeightAddon");

                    b.HasKey("Id");

                    b.HasIndex("TariffSolutionId");

                    b.ToTable("TariffAddons", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.TariffSolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AwbDestinationAirportId")
                        .HasColumnType("int");

                    b.Property<int?>("AwbDestinationTariffGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("AwbOriginAirportId")
                        .HasColumnType("int");

                    b.Property<int?>("AwbOriginTariffGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("longtext")
                        .HasColumnName("ClientName");

                    b.Property<string>("ClientNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("ClientNumber");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("Code");

                    b.Property<string>("CoverageArea")
                        .HasColumnType("longtext")
                        .HasColumnName("CoverageArea");

                    b.Property<string>("Currency")
                        .HasColumnType("longtext")
                        .HasColumnName("Currency");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("EndDate");

                    b.Property<string>("Flights")
                        .HasColumnType("longtext")
                        .HasColumnName("Flights");

                    b.Property<string>("IataAgentCode")
                        .HasColumnType("longtext")
                        .HasColumnName("IataAgentCode");

                    b.Property<bool>("IsAllIn")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsAllIn");

                    b.Property<bool>("IsSpecial")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsSpecial");

                    b.Property<decimal>("MinTariff")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("MinTariff");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("longtext")
                        .HasColumnName("PaymentTerms");

                    b.Property<string>("PeriodType")
                        .HasColumnType("longtext")
                        .HasColumnName("PeriodType");

                    b.Property<string>("Product")
                        .HasColumnType("longtext")
                        .HasColumnName("Product");

                    b.Property<ulong?>("RateGridHeaderId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Routes")
                        .HasColumnType("longtext")
                        .HasColumnName("Routes");

                    b.Property<string>("SalesChannel")
                        .HasColumnType("longtext")
                        .HasColumnName("SalesChannel");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("StartDate");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("Status");

                    b.Property<string>("TariffType")
                        .HasColumnType("longtext")
                        .HasColumnName("TariffType");

                    b.Property<int?>("TransitAirportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ValidationDate");

                    b.Property<string>("WeekDays")
                        .HasColumnType("longtext")
                        .HasColumnName("WeekDays");

                    b.Property<string>("WeightCharge")
                        .HasColumnType("longtext")
                        .HasColumnName("WeightCharge");

                    b.HasKey("Id");

                    b.HasIndex("AwbDestinationAirportId");

                    b.HasIndex("AwbDestinationTariffGroupId");

                    b.HasIndex("AwbOriginAirportId");

                    b.HasIndex("AwbOriginTariffGroupId");

                    b.HasIndex("RateGridHeaderId");

                    b.HasIndex("TransitAirportId");

                    b.ToTable("TariffSolutions", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.TransportProduct", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Trigger")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransportProducts");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.TransProduct", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasComment("ID and primary key of a product.");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("Product's code. Must be an English string.");

                    b.Property<ulong>("DescriptionId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("DescId")
                        .HasComment("Reference to description resource.");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasComment("Product's trigger.");

                    b.Property<DateTime>("Ver")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasComment("Row's timestamp.");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId");

                    b.HasIndex(new[] { "Code" }, "IX_TransProducts1")
                        .IsUnique();

                    b.HasIndex(new[] { "Trigger" }, "IX_TransProducts2")
                        .IsUnique();

                    b.ToTable("TransProducts");

                    b.HasComment("Contains all transportation products supported by the system.");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Schedule.FlightShedule", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("AircraftRegistration")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AircraftType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("PayloadVolume")
                        .HasColumnType("double");

                    b.Property<double?>("PayloadWeight")
                        .HasColumnType("double");

                    b.Property<string>("SHR")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("StDestination")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StOrigin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FlightShedules", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Session", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("ContragentId")
                        .HasColumnType("int")
                        .HasColumnName("ContragentId");

                    b.Property<string>("ContragentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ContragentName");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsCarrier")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsCarrier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Login");

                    b.HasKey("Id");

                    b.ToTable("Sessions", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.AgentContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateAt");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateTo");

                    b.Property<int>("SaleAgentId")
                        .HasColumnType("int")
                        .HasColumnName("SaleAgentId");

                    b.Property<string>("SalesChannel")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SalesChannel");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("SaleAgentId");

                    b.ToTable("AgentsContracts", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.AgentContractPoolAwb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("PoolLenght")
                        .HasColumnType("int")
                        .HasColumnName("PoolLenght");

                    b.Property<int>("StartNumber")
                        .HasMaxLength(7)
                        .HasColumnType("int")
                        .HasColumnName("StartNumber");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("AgentsContractPoolAwbs", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.AgentContractPoolAwbNums", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("AwbPoolId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreateDate");

                    b.Property<int>("SerialNumber")
                        .HasMaxLength(7)
                        .HasColumnType("int")
                        .HasColumnName("SerialNumber");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("AwbPoolId");

                    b.ToTable("AgentsContractPoolAwbNums", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AcPrefix")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("AcPrefix");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("IataCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("IataCode");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Carriers", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Shared.NlsLanguage", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasComment("ID and primary key of an NLS language.");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasComment("NLS language code. Must be a 3-char English mnemonic. Required. For language management.");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("NLS language name. Must be an English name. Optional. For language management.");

                    b.Property<DateTime>("Ver")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasComment("Row's timestamp.");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_NlsLanguages1")
                        .IsUnique();

                    b.ToTable("NlsLanguages");

                    b.HasComment("Contains all NLS languages supported by the system.");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Shared.NlsResource", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasComment("ID and primary key of an NLS resource.");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("Resource code/identifier for user-friendly referencing with certain kinds of admin consoles (resource management).");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("Desc")
                        .HasComment("Optional resource description for user-friendly resource management.");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("Resource type such as string, image, huge text, etc...");

                    b.Property<DateTime>("Ver")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasComment("Row's timestamp.");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_NlsResources1")
                        .IsUnique();

                    b.ToTable("NlsResources");

                    b.HasComment("Contains all NLS resources of all types supported by the system.");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Shared.NlsStringResource", b =>
                {
                    b.Property<ulong>("LanguageId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("LanId")
                        .HasComment("Reference to NLS language.");

                    b.Property<ulong>("ResourceId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("RscId")
                        .HasComment("Reference to NLS resource.");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasComment("Actual NLS string/text.");

                    b.Property<DateTime>("Ver")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasComment("Row's timestamp.");

                    b.HasKey("LanguageId", "ResourceId")
                        .HasName("PK_NlsStringResources");

                    b.HasIndex("ResourceId");

                    b.ToTable("NlsStringResources");

                    b.HasComment("Contains all string-type NLS resources supported by the system.");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Shr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ShrCode");

                    b.Property<string>("ForbShrGroupIata")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ForbShrGroupIata");

                    b.Property<string>("InternationalDescr")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NameEn");

                    b.Property<string>("RecomendedShr")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RecShr");

                    b.Property<string>("RussianDescr")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NameRu");

                    b.Property<string>("ShrGroup")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ShrGroup");

                    b.HasKey("Id");

                    b.ToTable("Shrs", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.SizeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AwbId")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("double")
                        .HasColumnName("Height");

                    b.Property<double>("Lenght")
                        .HasColumnType("double")
                        .HasColumnName("Lenght");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<double>("Width")
                        .HasColumnType("double")
                        .HasColumnName("Width");

                    b.HasKey("Id");

                    b.HasIndex("AwbId");

                    b.ToTable("SizeGroups", (string)null);
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.TaxCharge", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<decimal>("Charge")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Charge");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Tax");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Total");

                    b.Property<decimal>("TotalOtherChargesDueAgent")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("TotalOtherChargesDueAgent");

                    b.Property<decimal>("TotalOtherChargesDueCarrier")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("TotalOtherChargesDueCarrier");

                    b.Property<decimal>("ValuationCharge")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("ValuationCharge");

                    b.HasKey("Id");

                    b.ToTable("TaxCharges", (string)null);
                });

            modelBuilder.Entity("ShrTariffAddon", b =>
                {
                    b.Property<int>("ShrCodesId")
                        .HasColumnType("int");

                    b.Property<ulong>("TariffAddonsId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("ShrCodesId", "TariffAddonsId");

                    b.HasIndex("TariffAddonsId");

                    b.ToTable("ShrTariffAddon");
                });

            modelBuilder.Entity("ShrTransportProduct", b =>
                {
                    b.Property<int>("ShrCodesId")
                        .HasColumnType("int");

                    b.Property<ulong>("TransportProductsId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("ShrCodesId", "TransportProductsId");

                    b.HasIndex("TransportProductsId");

                    b.ToTable("ShrTransportProduct");
                });

            modelBuilder.Entity("ShrTransProduct", b =>
                {
                    b.Property<ulong>("ProductsId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("ShCodesId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShCodesId");

                    b.HasIndex("ShCodesId");

                    b.ToTable("ShrTransProduct");
                });

            modelBuilder.Entity("CarrierChargeBindingIataLocation", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", null)
                        .WithMany()
                        .HasForeignKey("AirportsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.CarrierChargeBinding", null)
                        .WithMany()
                        .HasForeignKey("CarrierChargeBindingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarrierChargeShr", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Shr", null)
                        .WithMany()
                        .HasForeignKey("IncludedShrCodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.CarrierCharge", null)
                        .WithMany()
                        .HasForeignKey("IncludingCarrierChargesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarrierChargeShr1", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Shr", null)
                        .WithMany()
                        .HasForeignKey("ExcludedShrCodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.CarrierCharge", null)
                        .WithMany()
                        .HasForeignKey("ExcludingCarrierChargesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarrierChargeTransportProduct", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.TransportProduct", null)
                        .WithMany()
                        .HasForeignKey("IncludedProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.CarrierCharge", null)
                        .WithMany()
                        .HasForeignKey("IncludingCarrierChargesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarrierChargeTransportProduct1", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.TransportProduct", null)
                        .WithMany()
                        .HasForeignKey("ExcludedProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.CarrierCharge", null)
                        .WithMany()
                        .HasForeignKey("ExcludingCarrierChargesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IataLocationTariffGroup", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", null)
                        .WithMany()
                        .HasForeignKey("AirportsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.TariffGroup", null)
                        .WithMany()
                        .HasForeignKey("TariffGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Agent", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Settings.Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Contragent", "Contragent")
                        .WithMany("SalesAgent")
                        .HasForeignKey("ContragentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");

                    b.Navigation("Contragent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Airline", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Contragent", "Contragent")
                        .WithOne("Carrier")
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.Airline", "ContragentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contragent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Awb", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.TaxCharge", "Collect")
                        .WithMany()
                        .HasForeignKey("CollectId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.AwbContragent", "Consignee")
                        .WithMany()
                        .HasForeignKey("ConsigneeId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.AwbContragent", "Consignor")
                        .WithMany()
                        .HasForeignKey("ConsignorId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Settings.AgentContractPoolAwbNums", "PoolAwbNum")
                        .WithMany()
                        .HasForeignKey("PoolAwbNumId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.TaxCharge", "Prepaid")
                        .WithMany()
                        .HasForeignKey("PrepaidId");

                    b.Navigation("Agent");

                    b.Navigation("Collect");

                    b.Navigation("Consignee");

                    b.Navigation("Consignor");

                    b.Navigation("PoolAwbNum");

                    b.Navigation("Prepaid");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Booking", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Awb", "Awb")
                        .WithMany("Bookings")
                        .HasForeignKey("AwbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Schedule.FlightShedule", "FlightSchedule")
                        .WithMany("Bookings")
                        .HasForeignKey("FlightScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Booking", "PrevRouting")
                        .WithMany("NextRoutings")
                        .HasForeignKey("PrevRoutingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Awb");

                    b.Navigation("FlightSchedule");

                    b.Navigation("PrevRouting");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.BookingRcs", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Awb", "Awb")
                        .WithMany("BookingRcs")
                        .HasForeignKey("AwbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Schedule.FlightShedule", "FlightSchedule")
                        .WithMany("BookingRcs")
                        .HasForeignKey("FlightScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Awb");

                    b.Navigation("FlightSchedule");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.ConsignmentStatus", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Awb", "Awb")
                        .WithMany("Tracking")
                        .HasForeignKey("AwbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Awb");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.ContactDetail", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Contragent", "Contragent")
                        .WithMany("ContactDetails")
                        .HasForeignKey("ContragentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contragent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.ContactInformation", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Agent", "Agent")
                        .WithMany("AdditionalContactInfo")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Contragent", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Country", "Country")
                        .WithMany("Contragents")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.AirportContactInformation", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocationExtInfo", "IataLocationExtInfo")
                        .WithMany("AdditionalContactInfo")
                        .HasForeignKey("IataLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IataLocationExtInfo");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", "MetropolitanArea")
                        .WithMany("Airports")
                        .HasForeignKey("MetropolitanAreaId");

                    b.Navigation("Country");

                    b.Navigation("MetropolitanArea");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.IataLocationExtInfo", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", "IataLocation")
                        .WithOne("IataLocationExtInfo")
                        .HasForeignKey("Cargo.Infrastructure.Data.Model.Dictionary.IataLocationExtInfo", "IataLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IataLocation");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.SlaProhibition", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocationExtInfo", "IataLocationExtInfo")
                        .WithMany("SlaProhibitions")
                        .HasForeignKey("IataLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IataLocationExtInfo");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.SlaTimeLimitation", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocationExtInfo", "IataLocationExtInfo")
                        .WithMany("SlaTimeLimitations")
                        .HasForeignKey("IataLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IataLocationExtInfo");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.TelexSetting", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocationExtInfo", "IataLocationExtInfo")
                        .WithMany("TelexSettings")
                        .HasForeignKey("IataLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IataLocationExtInfo");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Message", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Awb", "LinkedAwb")
                        .WithMany("Messages")
                        .HasForeignKey("LinkedAwbId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Schedule.FlightShedule", "LinkedFlight")
                        .WithMany("Messages")
                        .HasForeignKey("LinkedFlightId");

                    b.Navigation("LinkedAwb");

                    b.Navigation("LinkedFlight");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.OtherCharge", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Awb", "Awb")
                        .WithMany("OtherCharges")
                        .HasForeignKey("AwbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Awb");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.CarrierChargeBinding", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.CarrierCharge", "CarrierCharge")
                        .WithMany("CarrierChargeBindings")
                        .HasForeignKey("CarrierChargeId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Country", "Country")
                        .WithMany("CarrierChargeBindings")
                        .HasForeignKey("CountryId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.Currency", "Currency")
                        .WithMany("CarrierChargeBindings")
                        .HasForeignKey("CurrencyId");

                    b.Navigation("CarrierCharge");

                    b.Navigation("Country");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.RateGridRank", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.RateGridHeader", "Grid")
                        .WithMany("Ranks")
                        .HasForeignKey("GridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RateGridRanks1");

                    b.Navigation("Grid");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.RateGridRankValue", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.TariffSolution", "TariffSolution")
                        .WithMany("RateGridRankValues")
                        .HasForeignKey("TariffSolutionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TariffSolution");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.TariffAddon", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.TariffSolution", "TariffSolution")
                        .WithMany("Addons")
                        .HasForeignKey("TariffSolutionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TariffSolution");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.TariffSolution", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", "AwbDestinationAirport")
                        .WithMany("TariffSolutionsDestinations")
                        .HasForeignKey("AwbDestinationAirportId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.TariffGroup", "AwbDestinationTariffGroup")
                        .WithMany("TariffSolutionsDesinations")
                        .HasForeignKey("AwbDestinationTariffGroupId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", "AwbOriginAirport")
                        .WithMany("TariffSolutionsOrigins")
                        .HasForeignKey("AwbOriginAirportId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.TariffGroup", "AwbOriginTariffGroup")
                        .WithMany("TariffSolutionsOrigins")
                        .HasForeignKey("AwbOriginTariffGroupId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.RateGridHeader", "RateGrid")
                        .WithMany("TariffSolutions")
                        .HasForeignKey("RateGridHeaderId");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", "TransitAirport")
                        .WithMany("TariffSolutionsTransits")
                        .HasForeignKey("TransitAirportId");

                    b.Navigation("AwbDestinationAirport");

                    b.Navigation("AwbDestinationTariffGroup");

                    b.Navigation("AwbOriginAirport");

                    b.Navigation("AwbOriginTariffGroup");

                    b.Navigation("RateGrid");

                    b.Navigation("TransitAirport");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.TransProduct", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Shared.NlsResource", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TransProducts1");

                    b.Navigation("Description");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.AgentContract", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Agent", "SaleAgent")
                        .WithMany("AgentContracts")
                        .HasForeignKey("SaleAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaleAgent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.AgentContractPoolAwb", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Settings.AgentContract", "Contract")
                        .WithMany("PoolAwbs")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.AgentContractPoolAwbNums", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Settings.AgentContractPoolAwb", "AwbPool")
                        .WithMany("UsedAwbNumbers")
                        .HasForeignKey("AwbPoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwbPool");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Shared.NlsStringResource", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Shared.NlsLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NlsStringResources1");

                    b.HasOne("Cargo.Infrastructure.Data.Model.Shared.NlsResource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NlsStringResources2");

                    b.Navigation("Language");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.SizeGroup", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Awb", "Awb")
                        .WithMany("SizeGroups")
                        .HasForeignKey("AwbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Awb");
                });

            modelBuilder.Entity("ShrTariffAddon", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Shr", null)
                        .WithMany()
                        .HasForeignKey("ShrCodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.TariffAddon", null)
                        .WithMany()
                        .HasForeignKey("TariffAddonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShrTransportProduct", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Shr", null)
                        .WithMany()
                        .HasForeignKey("ShrCodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.TransportProduct", null)
                        .WithMany()
                        .HasForeignKey("TransportProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShrTransProduct", b =>
                {
                    b.HasOne("Cargo.Infrastructure.Data.Model.Rates.TransProduct", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cargo.Infrastructure.Data.Model.Shr", null)
                        .WithMany()
                        .HasForeignKey("ShCodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Agent", b =>
                {
                    b.Navigation("AdditionalContactInfo");

                    b.Navigation("AgentContracts");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Awb", b =>
                {
                    b.Navigation("BookingRcs");

                    b.Navigation("Bookings");

                    b.Navigation("Messages");

                    b.Navigation("OtherCharges");

                    b.Navigation("SizeGroups");

                    b.Navigation("Tracking");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Booking", b =>
                {
                    b.Navigation("NextRoutings");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Contragent", b =>
                {
                    b.Navigation("Carrier");

                    b.Navigation("ContactDetails");

                    b.Navigation("SalesAgent");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Country", b =>
                {
                    b.Navigation("CarrierChargeBindings");

                    b.Navigation("Contragents");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.Currency", b =>
                {
                    b.Navigation("CarrierChargeBindings");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.IataLocation", b =>
                {
                    b.Navigation("Airports");

                    b.Navigation("IataLocationExtInfo");

                    b.Navigation("TariffSolutionsDestinations");

                    b.Navigation("TariffSolutionsOrigins");

                    b.Navigation("TariffSolutionsTransits");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.IataLocationExtInfo", b =>
                {
                    b.Navigation("AdditionalContactInfo");

                    b.Navigation("SlaProhibitions");

                    b.Navigation("SlaTimeLimitations");

                    b.Navigation("TelexSettings");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Dictionary.TariffGroup", b =>
                {
                    b.Navigation("TariffSolutionsDesinations");

                    b.Navigation("TariffSolutionsOrigins");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.CarrierCharge", b =>
                {
                    b.Navigation("CarrierChargeBindings");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.RateGridHeader", b =>
                {
                    b.Navigation("Ranks");

                    b.Navigation("TariffSolutions");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Rates.TariffSolution", b =>
                {
                    b.Navigation("Addons");

                    b.Navigation("RateGridRankValues");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Schedule.FlightShedule", b =>
                {
                    b.Navigation("BookingRcs");

                    b.Navigation("Bookings");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.AgentContract", b =>
                {
                    b.Navigation("PoolAwbs");
                });

            modelBuilder.Entity("Cargo.Infrastructure.Data.Model.Settings.AgentContractPoolAwb", b =>
                {
                    b.Navigation("UsedAwbNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
